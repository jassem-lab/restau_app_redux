{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\jassem\\\\Desktop\\\\restau\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\jassem\\\\Desktop\\\\restau\\\\src\\\\modalAdd.js\";\nimport React, { useState } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Label, Form, FormGroup, Input } from 'reactstrap';\n\nconst ModalExample = props => {\n  const className = props.className,\n        list = props.list,\n        addDish = props.addDish;\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        modal = _useState2[0],\n        setModal = _useState2[1];\n\n  const _useState3 = useState({\n    dishName: \"\",\n    price: \"\",\n    image: \"\"\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        dish = _useState4[0],\n        setDish = _useState4[1];\n\n  const toggle = () => setModal(!modal);\n\n  const getAndSendNewValues = () => {\n    const id = list.length;\n    addDish({\n      id,\n      dish,\n      price,\n      image\n    });\n    toggle();\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: \"btn-sm py-0 btn-info\",\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Add +\"), React.createElement(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    className: className,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(ModalHeader, {\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Add dish +\"), React.createElement(ModalBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Dish :\"), React.createElement(Input, {\n    type: \"text\",\n    value: dish,\n    onChange: e => setDish(dish.dishName = e.target.value),\n    name: \"dish\",\n    id: \"dish\",\n    placeholder: \"Add dish Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })), React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Image :\"), React.createElement(Input, {\n    type: \"text\",\n    value: image,\n    onChange: e => setDish(dish.image = e.target.value),\n    name: \"image\",\n    id: \"image\",\n    placeholder: \"Add image url\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })), React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Price :\"), React.createElement(Input, {\n    type: \"text\",\n    value: price,\n    onChange: e => setDish(dish.price = e.target.value),\n    name: \"price\",\n    id: \"price\",\n    placeholder: \"Add price\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })))), React.createElement(ModalFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    onClick: getAndSendNewValues,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Save\"), ' ', React.createElement(Button, {\n    color: \"secondary\",\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Cancel\"))));\n};\n\nexport default ModalExample;","map":{"version":3,"sources":["C:/Users/jassem/Desktop/restau/src/modalAdd.js"],"names":["React","useState","Button","Modal","ModalHeader","ModalBody","ModalFooter","Label","Form","FormGroup","Input","ModalExample","props","className","list","addDish","modal","setModal","dishName","price","image","dish","setDish","toggle","getAndSendNewValues","id","length","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Label, Form, FormGroup,Input } from 'reactstrap';\r\n\r\nconst ModalExample = (props) => {\r\n  const {\r\n    className,\r\n    list,\r\n    addDish\r\n  } = props;\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const [dish , setDish] = useState(\r\n    {\r\n    dishName : \"\",\r\n    price : \"\" , \r\n    image : \"\" , \r\n  }\r\n  );\r\n\r\n  const toggle = () => setModal(!modal);\r\n const getAndSendNewValues =()=>{\r\n  const id=list.length\r\n  addDish({id,dish,price,image})\r\n  toggle();\r\n     \r\n }\r\n \r\n  return (\r\n    <div>\r\n      <Button className=\"btn-sm py-0 btn-info\" onClick={toggle}>Add +</Button>\r\n      <Modal isOpen={modal} toggle={toggle} className={className}>\r\n        <ModalHeader toggle={toggle}>Add dish +</ModalHeader>\r\n        <ModalBody>\r\n        <Form>\r\n      <FormGroup>\r\n        <Label >Dish :</Label>\r\n        <Input type=\"text\" value={dish}  onChange={(e)=>setDish( dish.dishName = e.target.value)} name=\"dish\" id=\"dish\" placeholder=\"Add dish Name\" />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label >Image :</Label>\r\n        <Input type=\"text\" value={image} onChange={(e)=>setDish( dish.image =e.target.value)} name=\"image\" id=\"image\" placeholder=\"Add image url\" />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label >Price :</Label>\r\n        <Input type=\"text\" value={price} onChange={(e)=>setDish(dish.price = e.target.value)} name=\"price\" id=\"price\" placeholder=\"Add price\" />\r\n      </FormGroup>\r\n      </Form> \r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={getAndSendNewValues}>Save</Button>{' '}\r\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModalExample;"]},"metadata":{},"sourceType":"module"}