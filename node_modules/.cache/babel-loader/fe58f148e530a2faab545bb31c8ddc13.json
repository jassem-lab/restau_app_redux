{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\jassem\\\\Desktop\\\\restau\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\jassem\\\\Desktop\\\\restau\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\jassem\\\\Desktop\\\\restau\\\\src\\\\modalAdd.js\";\nimport React, { useState } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Label, Form, FormGroup, Input } from 'reactstrap';\n\nconst ModalExample = props => {\n  const className = props.className,\n        list = props.list,\n        addDish = props.addDish;\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        modal = _useState2[0],\n        setModal = _useState2[1];\n\n  const _useState3 = useState({\n    dishName: \"\",\n    price: \"\",\n    image: \"\",\n    id: \"\"\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        dish = _useState4[0],\n        setDish = _useState4[1];\n\n  const toggle = () => setModal(!modal);\n\n  const dishName = dish.dishName,\n        price = dish.price,\n        image = dish.image;\n\n  const getAndSendNewValues = () => {\n    const id = list.length;\n    addDish({\n      id,\n      dishName,\n      price,\n      image\n    });\n    toggle();\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: \"btn-sm py-0 btn-info\",\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Add +\"), React.createElement(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    className: className,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(ModalHeader, {\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Add dish +\"), React.createElement(ModalBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Dish :\"), React.createElement(Input, {\n    type: \"text\",\n    value: dishName,\n    onChange: e => setDish(_objectSpread({}, dish, {\n      dishName: e.target.value\n    })),\n    name: \"dish\",\n    id: \"dish\",\n    placeholder: \"Add dish Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })), React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Image :\"), React.createElement(Input, {\n    type: \"text\",\n    value: image,\n    onChange: e => setDish(_objectSpread({}, dish, {\n      image: e.target.value\n    })),\n    name: \"image\",\n    id: \"image\",\n    placeholder: \"Add image url\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })), React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Price :\"), React.createElement(Input, {\n    type: \"text\",\n    value: price,\n    onChange: e => setDish(_objectSpread({}, dish, {\n      price: e.target.value\n    })),\n    name: \"price\",\n    id: \"price\",\n    placeholder: \"Add price\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })))), React.createElement(ModalFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    onClick: getAndSendNewValues,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Save\"), ' ', React.createElement(Button, {\n    color: \"secondary\",\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Cancel\"))));\n};\n\nexport default ModalExample;","map":{"version":3,"sources":["C:/Users/jassem/Desktop/restau/src/modalAdd.js"],"names":["React","useState","Button","Modal","ModalHeader","ModalBody","ModalFooter","Label","Form","FormGroup","Input","ModalExample","props","className","list","addDish","modal","setModal","dishName","price","image","id","dish","setDish","toggle","getAndSendNewValues","length","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Label, Form, FormGroup,Input } from 'reactstrap';\r\n\r\nconst ModalExample = (props) => {\r\n  const {\r\n    className,\r\n    list,\r\n    addDish\r\n  } = props;\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const [dish, setDish] = useState(\r\n    {\r\n    dishName : \"\",\r\n    price : \"\" , \r\n    image : \"\" , \r\n    id : \"\" , \r\n  }\r\n  );\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  const {dishName ,price ,image } = dish ; \r\n\r\n  const getAndSendNewValues =()=>{\r\n  const id=list.length\r\n  addDish({id,dishName,price,image})\r\n  toggle();\r\n     \r\n }\r\n \r\n  return (\r\n    <div>\r\n      <Button className=\"btn-sm py-0 btn-info\" onClick={toggle}>Add +</Button>\r\n      <Modal isOpen={modal} toggle={toggle} className={className}>\r\n        <ModalHeader toggle={toggle}>Add dish +</ModalHeader>\r\n        <ModalBody>\r\n        <Form>\r\n      <FormGroup>\r\n        <Label >Dish :</Label>\r\n        <Input type=\"text\" value={dishName}  onChange= {(e)=>setDish({...dish,dishName : e.target.value }) }  name=\"dish\" id=\"dish\" placeholder=\"Add dish Name\" />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label >Image :</Label>\r\n        <Input type=\"text\" value={image} onChange={(e)=>setDish({...dish, image : e.target.value })} name=\"image\" id=\"image\" placeholder=\"Add image url\" />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label >Price :</Label>\r\n        <Input type=\"text\" value={price} onChange={(e)=>setDish({...dish,  price : e.target.value })} name=\"price\" id=\"price\" placeholder=\"Add price\" />\r\n      </FormGroup>\r\n      </Form> \r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={getAndSendNewValues}>Save</Button>{' '}\r\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModalExample;"]},"metadata":{},"sourceType":"module"}